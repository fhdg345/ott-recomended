spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3307/ott?serverTimezone=UTC&characterEncoding=UTF-8
    username: ott
    password: ott
  jpa:
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        ddl-auto: create
        format_sql: true
        default_batch_fetch_size: 500
        search:
          backend:
            analysis:
             # configurer: com.ott.server.elasticsearch.CustomElasticsearchAnalysisConfigurer
            type: elasticsearch
            hosts: localhost:9200
            protocol: http
#          mapping:
#            configurer: com.ott.server.media.MediaMappingConfigurer
    show-sql: true

    resources:
      static-locations:
        - classpath:/META-INF/resources/
        - classpath:/resources/
        - classpath:/static/
        - classpath:/public/
    open-in-view: false


  security:
    oauth2:
      client:
        registration:
          google:
#            clientId: {$CLIENT_ID_GOOGLE}
            clientId: 94997750425-uhfcb78sb0veqnehh3dfghmd57eac6aq.apps.googleusercontent.com
            clientSecret: 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
            scope:
              - email
              - profile
          naver:
            client-id: l96jJOaCltiFH52RtFeI
            client-secret: YCH_bRY2oK
            client-name: Naver
            redirect-uri: "https://joying.vercel.app/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
          kakao:
            client-id: ed55347aebff657d166a56d7fe352897
            client-secret: ejmftexg9aPj2YroYV5z7ooxXSDnTDpE
            client-name: Kakao
            client-authentication-method: POST
            redirect-uri: "https://joying.vercel.app/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

  elasticsearch:
    rest:
      uris: http://localhost:9200
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

  redis:
    host: localhost
    port: 6379
    password: test1234
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 2


  cache:
    type: redis
    cache-names: myCache


logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
      hibernate:
        search: DEBUG
        SQL: debug
        type:
          descriptor:
            sql:
             BasicBinder: trace
server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: admin@gmail.com
jwt:
  key: NUVsN2tNeEp4ZC9xZjY2NDdrMGUxcHVoSkhsUlBUQGlNcWVOMCpuU09kR2V5PUEqJlFIRUA4TkFYeEtxJEktJDltWi1YTm9MdnVLQUZqRTg2cC9XY1VKLzNNVVozbzE3QysxaQo
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 1440

cloud:
  aws:
    stack:
      auto: false

#cloud:
#  aws:
#    s3:
#      bucket: ott-main-project
#    credentials:
#      accessKey: ${AWS_ACCESS_KEY}
#      secretKey: ${AWS_ACCESS_SECRET_KEY}
#    region:
#      static: ap-northeast-2
#    stack:
#      auto: false

